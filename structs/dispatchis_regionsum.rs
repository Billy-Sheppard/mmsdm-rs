struct Regionsum {
    settlementdate: chrono::NaiveDateTime, 
    runno: i64,
    regionid: String,
    dispatchinterval: i64,
    intervention: i64,
    totaldemand: f64,
    availablegeneration: f64,
    availableload: f64,
    demandforecast: f64,
    dispatchablegeneration: f64,
    dispatchableload: Option<f64>,
    netinterchange: f64,
    excessgeneration: Option<f64>,
    lower5mindispatch: Option<f64>,			
    lower5minimport: Option<f64>,		
    lower5minlocaldispatch: f64,
    lower5minlocalprice: Option<f64>,	
    lower5minlocalreq: Option<f64>,	
    lower5minprice: Option<f64>,	
    lower5minreq: Option<f64>,	
    lower5minsupplyprice: Option<f64>,	
    lower60secdispatch: Option<f64>,	
    lower60secimport: Option<f64>,	
    lower60seclocaldispatch: f64,
    lower60seclocalprice: Option<f64>,			
    lower60seclocalreq: Option<f64>,			
    lower60secprice: Option<f64>,			
    lower60secreq: Option<f64>,			
    lower60secsupplyprice: Option<f64>,			
    lower6secdispatch: Option<f64>,			
    lower6secimport: Option<f64>,			
    lower6seclocaldispatch: f64,
    lower6seclocalprice: Option<f64>,			
    lower6seclocalreq: Option<f64>,			
    lower6secprice: Option<f64>,			
    lower6secreq: Option<f64>,			
    lower6secsupplyprice: Option<f64>,			
    raise5mindispatch: Option<f64>,			
    raise5minimport: Option<f64>,			
    raise5minlocaldispatch:	f64,
    raise5minlocalprice: Option<f64>,			
    raise5minlocalreq: Option<f64>,			
    raise5minprice: Option<f64>,			
    raise5minreq: Option<f64>,			
    raise5minsupplyprice: Option<f64>,			
    raise60secdispatch: Option<f64>,			
    raise60secimport: Option<f64>,			
    raise60seclocaldispatch: f64,
    raise60seclocalprice: Option<f64>,			
    raise60seclocalreq: Option<f64>,			
    raise60secprice: Option<f64>,			
    raise60secreq: Option<f64>,			
    raise60secsupplyprice: Option<f64>,			
    raise6secdispatch: Option<f64>,			
    raise6secimport: Option<f64>,			
    raise6seclocaldispatch: f64,
    raise6seclocalprice: Option<f64>,			
    raise6seclocalreq: Option<f64>,			
    raise6secprice: Option<f64>,			
    raise6secreq: Option<f64>,			
    raise6secsupplyprice: Option<f64>,			
    aggegatedispatcherror: Option<f64>,			
    aggregatedispatcherror: f64, 
    lastchanged: chrono::NaiveDateTime,
    initialsupply: f64,
    clearedsupply: f64,
    lowerregimport: Option<f64>,			
    lowerreglocaldispatch: f64,
    lowerreglocalreq: Option<f64>,			
    lowerregreq: Option<f64>,			
    raiseregimport: Option<f64>,			
    raisereglocaldispatch: f64,
    raisereglocalreq: Option<f64>,			
    raiseregreq: Option<f64>,			
    raise5minlocalviolation: Option<f64>,			
    raisereglocalviolation: Option<f64>,			
    raise60seclocalviolation: Option<f64>,			
    raise6seclocalviolation: Option<f64>,			
    lower5minlocalviolation: Option<f64>,			
    lowerreglocalviolation: Option<f64>,			
    lower60seclocalviolation: Option<f64>,			
    lower6seclocalviolation: Option<f64>,			
    raise5minviolation: Option<f64>,			
    raiseregviolation: Option<f64>,			
    raise60secviolation: Option<f64>,			
    raise6secviolation: Option<f64>,			
    lower5minviolation: Option<f64>,			
    lowerregviolation: Option<f64>,			
    lower60secviolation: Option<f64>,			
    lower6secviolation: Option<f64>,			
    raise6secactualavailability: f64,	
    raise60secactualavailability: f64,	
    raise5minactualavailability: f64,	
    raiseregactualavailability: f64,	
    lower6secactualavailability: f64,	
    lower60secactualavailability: f64,	
    lower5minactualavailability: f64,	
    lowerregactualavailability: f64,	
    lorsurplus: Option<f64>,			
    lrcsurplus: Option<f64>,			
    totalintermittentgeneration: f64,
    demand_and_nonschedgen: f64,
    uigf: f64,
    semischedule_clearedmw: f64,
    semischedule_compliancemw: f64,
}